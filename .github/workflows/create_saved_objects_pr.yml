name: Kibana saved objects CI
'on':
  workflow_dispatch: null
jobs:
  create-saved-objects-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          echo "github.actor: ${{ github.actor }}"
          echo "github.triggering_actor: ${{ github.triggering_actor }}"

      - name: Create feature branch
        id: create-branch
        run: |
          git config --global user.name 'dummy'
          git config --global user.email 'dummy@users.noreply.github.com'
          BRANCH_NAME="testing-$(date +%Y%m%d%H%M%S)"
          git checkout -b $BRANCH_NAME
          echo "::set-output name=branch_name::$BRANCH_NAME"
      - name: Run script
        run: |
          echo "$(date +%Y%m%d%H%M%S)" > data.txt
          pwd
          ls -al

      - name: Check for changes
        id: check-for-changes
        run: |
          pwd
          ls -al
          if git diff --quiet HEAD -- ./data.txt; then
            echo "Changes detected in ./data.txt"
            echo "::set-output name=changes-detected::true"
          else
            echo "No changes in ./data.txt"
            echo "::set-output name=changes-detected::false"
          fi
      - name: Commit changes
        if: steps.check-for-changes.outputs.changes-detected == 'true'
        run: |
          git add ./data.txt
          git commit -m "Run work script and commit changes"
          git push origin ${{ steps.create-branch.outputs.branch_name }}
          
      - name: Create Pull Request
        id: create-pull-request
        if: steps.check-for-changes.outputs.changes-detected == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_CREATE_OUTPUT=$(gh pr create --title "Content update from ${{ steps.create-branch.outputs.branch_name }}" \
                      --body "This PR was created automatically by GitHub Actions." \
                      --base main \
                      --head ${{ steps.create-branch.outputs.branch_name }})
          PR_NUMBER=$(echo "$PR_CREATE_OUTPUT" | grep -oE '\d+$')
          echo "::set-output name=pr_url::$PR_CREATE_OUTPUT"

      - name: Merge Pull Request
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr merge ${{ steps.create-pull-request.outputs.pr_url }}